
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<!--Automatically generated by Erik Demaine's notes.py script-->
<head>
<title>
SE465/CS447/CS647/ECE453: Software Testing, Quality Assurance and Maintenance -- PDF Lecture notes -- Patrick Lam
</title>
<style type="text/css">
 li { padding-bottom:1em }
</style>
<!--#include virtual="/stqam/includes/header.html" -->

<div id="primarycontarea">
  <div id="primarycontent">
    <!-- InstanceBeginEditable name="primarycontent" -->
<H1><A HREF="http://www.patricklam.ca/stqam">SE465/CS447/CS647/ECE453: Software Testing, Quality Assurance and Maintenance</A>
    (Winter 2010)</H1>
<H2><A HREF="http://www.patricklam.ca">Patrick Lam</A></H2>
<DIV STYLE="background-color: #FFFF80; color: black">
<H2>Lecture notes</H2>
</DIV>
<p>You can check out all lecture notes' sources with the following command:</p>
<p>&nbsp;&nbsp;&nbsp;<code>git clone http://patricklam.ca/stqam/stqam-lectures.git/</code></p>
<p>The usual <code>git</code> commands will work for pulling updates from my repository.</p>

<p>You may use these lecture notes however you like. I am placing no
restrictions on their use. As far as I'm concerned, feel free to remix and
share.</p>

<P>
<UL>
<li> <a href="pdf/L1.pdf"><strong>Lecture 1</strong></a>: Introduction.</li>
<li> <a href="pdf/L2.pdf"><strong>Lecture 2</strong></a>: RIP fault model; test cases; coverage (infeasibility).</li>
<li> <a href="pdf/L3.pdf"><strong>Lecture 3</strong></a>: (v2) Subsumption. <strong>Graph Coverage</strong>: introduction to graphs; semantic vs syntactic reachability.</li>
<li> <a href="pdf/L4.pdf"><strong>Lecture 4</strong></a>: (v2) Test paths; Single-entry single exit graphs; test cases vs test paths; node coverage. </li>
<li> <a href="pdf/L5.pdf"><strong>Lecture 5</strong></a>: (v2) NC example; edge coverage; edge-pair coverage; simple and prime paths; prime path coverage; simple round trip coverage; complete round trip coverage; complete path coverage; specified path coverage. </li>
<li> <a href="pdf/L6.pdf"><strong>Lecture 6</strong></a>: (v3) PPC vs CPC; sidetrips and detours; Best-Effort Touring. </li>
<li> <a href="pdf/L7.pdf"><strong>Lecture 7</strong></a>: (v2) Algorithm for computing prime paths; prime paths example. Data flow Criteria: du paths. </li>
<li> <a href="pdf/L8.pdf"><strong>Lecture 8</strong></a>: All-Uses, All-Defs, All-Du-Paths Criteria; subsumption chart. </li>
<li> <a href="pdf/L9.pdf"><strong>Lecture 9</strong></a>: Graph coverage for source code: constructing control-flow graphs. </li>
<li> <a href="pdf/L10.pdf"><strong>Lecture 10</strong></a>: Dataflow graph coverage for source code; structural graph coverage for design elements.  </li>
<li> <a href="pdf/L11.pdf"><strong>Lecture 11</strong></a>: Dataflow graph coverage for design elements; coupling dataflow. </li>
<li> <a href="pdf/L12.pdf"><strong>Lecture 12</strong></a>: (v2) Graph coverage for specifications: sequencing constraints.</li>
<li> <a href="pdf/L13.pdf"><strong>Lecture 13</strong></a>: (v2) Graph coverage for specifications: Finite State Machines.</li>
<li> <a href="pdf/L14.pdf"><strong>Lecture 14</strong></a>: Graph coverage for use cases. Summary of graph coverage.</li>
<li> <a href="pdf/L15.pdf"><strong>Lecture 15</strong></a>: (v2) <strong>Logic coverage</strong>. Predicates and clauses. Predicate coverage, clause coverage, combinatorial coverage.</li>
<li> <a href="pdf/L16.pdf"><strong>Lecture 16</strong></a>: (v2) Active clauses. Determination. </li>
<li> <a href="pdf/L17.pdf"><strong>Lecture 17</strong></a>: (v4) Making clauses determine predicates. Active Clause Coverage. General Active Clause Coverage. Correlated Active Clause Coverage. </li>
<li> <a href="pdf/L18.pdf"><strong>Lecture 18</strong></a>: (v2) Remarks on ACC criteria. </li>
<li> <a href="pdf/L19.pdf"><strong>Lecture 19</strong></a>: (v2) Infeasibility (including how to get it) and subsumption for logic criteria. Logic coverage example. </li>
<li> <a href="pdf/L20.pdf"><strong>Lecture 20</strong></a>: Logic coverage of programs and Finite State Machines.</li>
<li> <a href="pdf/L21.pdf"><strong>Lecture 21</strong></a>: <strong>Unit testing</strong>. Principles of unit testing. Mock objects, dependency injection.</li>
<li> <a href="pdf/L22.pdf"><strong>Lecture 22</strong></a>: <strong>Syntax-based testing</strong>: regexps and grammars. Mutation and killing mutants. </li>
<li> <a href="pdf/L23.pdf"><strong>Lecture 23</strong></a>: Mutation testing for source code; weakly and strongly killing mutants. </li>
<li> <a href="pdf/L24.pdf"><strong>Lecture 24</strong></a>: Mutation Operators: Examples of normal, integration and OO mutation operators.</li>
<li> <a href="pdf/L25.pdf"><strong>Lecture 25</strong></a>: Input space grammars and mutating inputs: testing your programs on invalid inputs.</li>
<li> <a href="pdf/L26.pdf"><strong>Lecture 26</strong></a>: Guest Lecture by Aakarsh Nair on <strong>Regression Tests, Selenium, and Software Testing in Industry</strong>.</li>
<li> <a href="pdf/L27.pdf"><strong>Lecture 27</strong></a>: (v2) <strong>QA for Web Applications</strong>.</li>
<li> <a href="pdf/L28.pdf"><strong>Lecture 28</strong></a>: <strong>Test plans</strong>.</li>
<li> <a href="pdf/L29.pdf"><strong>Lecture 29</strong></a>: <strong>Input-space based testing</strong>: partitions. Input domain modelling, including interface-based IDMs.</li>
<li> <a href="pdf/L30.pdf"><strong>Lecture 30</strong></a>: Functionality-based IDMs. </li>
<li> <a href="pdf/L31.pdf"><strong>Lecture 31</strong></a>: Combining input domain models: Each Choice, Pair-Wise, T-Wise Coverage. Base choices; Base Choice Coverage, Multiple Base Choice Coverage. Constraints Among Partitions.</li>
<li> <a href="pdf/L32.pdf"><strong>Lecture 32</strong></a>: <strong>Writing good bug reports</strong>.</li>
<li> <a href="pdf/L33.pdf"><strong>Lecture 33</strong></a>: Guest Lecture by Prof. Derek Rayside on <strong>Software Model Checking</strong>.</li>
<li> <a href="pdf/L34.pdf"><strong>Lecture 34</strong></a>: <strong>Usage models</strong>. <strong>Wrap-up</strong>.</li>
</UL>
</BODY>
</HTML>
